[tool.poetry]
name = "iscc-did-driver"
version = "0.1.0"
description = ""
authors = ["Titusz Pan <titusz.pan@gmail.com>"]
readme = "README.md"
packages = [{include = "iscc_did_driver"}]

[tool.poetry.scripts]
iscc-did-driver = 'iscc_did_driver.main:main'

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
blacksheep = "^1.2"
uvicorn = "^0.18"
httpx = "^0.23"
gunicorn = "^20.1"
pydantic = {extras = ["dotenv"], version = "^1.10.2"}
loguru = "^0.6"
abnf-to-regexp = "^1.1"
orjson = "^3.8"
iscc-core = "^0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1"
black = "^22.8"
poethepoet = "^0.16"
pytest-asyncio = "^0.19"
schemathesis = "^3.17"
datamodel-code-generator = "^0.13"

[tool.black]
line-length = 100
target-version = ['py38']
preview = true

[tool.datamodel-codegen]
input = "iscc_did_driver/openapi.yaml"
encoding = "utf-8"
disable-timestamp = true
target-python-version = "3.8"
aliases = "iscc_did_driver/aliases.json"

[tool.poe.tasks]
codegen = { cmd = "datamodel-codegen --output iscc_did_driver/schema.py", help="Build code from OpenAPI Schema"}
format = { cmd = "poetry run python -m iscc_did_driver.format", help = "Code style formating"}
black = { cmd = "poetry run black .", help = "Code style formating with black" }
test = { cmd = "poetry run pytest", help = "Run tests" }
all = ["codegen", "format", "black", "test"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
